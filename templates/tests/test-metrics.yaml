{{- if .Values.testFramework.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "kube-state-metrics.fullname" . }}-test-metrics"
  labels:
    {{- include "kube-state-metrics.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ include "kube-state-metrics.name" . }}-test
  annotations:
    "helm.sh/hook-weight": "2"
    {{- with .Values.testFramework.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  containers:
  - name: test-metrics
    image: busybox
    command:
      - /bin/sh
      - -c
      - |
        set -ex
        echo "Testing specific metrics..."

        # Get metrics data
        METRICS=$(wget -q -O- -T 10 http://{{ include "kube-state-metrics.fullname" . }}:{{ .Values.service.port }}/metrics)

        # Check for essential metrics
        ESSENTIAL_METRICS=(
          "kube_pod_info"
          "kube_node_info" 
          "kube_namespace_created"
          "kube_deployment_created"
        )

        for metric in "${ESSENTIAL_METRICS[@]}"; do
          if echo "$METRICS" | grep -q "^${metric}"; then
            echo "‚úÖ Found metric: $metric"
          else
            echo "‚ùå Missing essential metric: $metric"
            exit 1
          fi
        done

        # Check if metrics are being updated (look for timestamps)
        if echo "$METRICS" | grep -q "[0-9]\{10,\}"; then
          echo "‚úÖ Metrics contain timestamps (data is fresh)"
        else
          echo "‚ö†Ô∏è  No recent timestamps found in metrics"
        fi

        # Count total metrics
        METRIC_COUNT=$(echo "$METRICS" | grep -c "^kube_")
        echo "üìä Found $METRIC_COUNT kube_ metrics"

        if [ "$METRIC_COUNT" -gt 10 ]; then
          echo "‚úÖ Sufficient number of metrics being exposed"
        else
          echo "‚ùå Very low metric count, possible issue"
          exit 1
        fi

        echo "‚úÖ All metrics tests passed!"
  restartPolicy: Never
{{- end }}